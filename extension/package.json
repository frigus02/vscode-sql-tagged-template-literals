{
  "name": "vscode-sql-tagged-template-literals",
  "displayName": "SQL tagged template literals",
  "description": "Syntax highlighting, validation and type checking for PostgreSQL in template literals tagged with `sql` function",
  "version": "0.0.18",
  "license": "MIT",
  "publisher": "frigus02",
  "repository": {
    "type": "git",
    "url": "https://github.com/frigus02/vscode-sql-tagged-template-literals"
  },
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "main": "./build/index.js",
  "contributes": {
    "configuration": {
      "title": "SQL tagged template literals",
      "properties": {
        "frigus02.vscode-sql-tagged-template-literals.enableDiagnostics": {
          "scope": "window",
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable diagnostics by parsing SQL statements and validating types using the specified schema file."
        },
        "frigus02.vscode-sql-tagged-template-literals.enableFormat": {
          "scope": "window",
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable formatting support for SQL in tagged template literals using [pgFormatter](https://github.com/darold/pgFormatter). Requires Perl."
        },
        "frigus02.vscode-sql-tagged-template-literals.schemaFile": {
          "scope": "window",
          "type": "string",
          "markdownDescription": "Path to JSON file describing the types used in your database schema. See [plugin documentation](https://github.com/frigus02/typescript-sql-tagged-template-plugin) for how to generate the file. You can specify the path in different ways:\n- Relative to the workspace root (only if you're working in a VS Code workspace with a single workspace folder)\n- Relative to the `tsconfig.json` file\n- Absolute"
        },
        "frigus02.vscode-sql-tagged-template-literals.defaultSchemaName": {
          "scope": "window",
          "type": "string",
          "markdownDescription": "Databse schema name used when SQL statements don't specify a schema. Defaults to `public`."
        },
        "frigus02.vscode-sql-tagged-template-literals.pgFormatterConfigFile": {
          "scope": "window",
          "type": "string",
          "markdownDescription": "Path to pgFormatter config file. Use this to customize SQL formatting. See [pg_format.config.sample](https://github.com/darold/pgFormatter/blob/v4.4/doc/pg_format.conf.sample) for available options. You can specify the path in different ways:\n- Relative to the workspace root (only if you're working in a VS Code workspace with a single workspace folder)\n- Relative to the `tsconfig.json` file\n- Absolute"
        }
      }
    },
    "typescriptServerPlugins": [
      {
        "name": "typescript-sql-tagged-template-plugin",
        "enableForWorkspaceTypeScriptVersions": true
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "tsconfig*.json",
        "url": "./schemas/tsconfig.schema.json"
      }
    ]
  },
  "dependencies": {
    "typescript-sql-tagged-template-plugin": "0.3.0"
  },
  "devDependencies": {
    "@types/node": "^20.3.1",
    "@types/vscode": "^1.79.0",
    "typescript": "^5.1.3"
  },
  "extensionDependencies": [
    "vscode.typescript-language-features",
    "frigus02.vscode-sql-tagged-template-literals-syntax-only"
  ],
  "scripts": {
    "vscode:prepublish": "yarn build",
    "build": "yarn tsc"
  }
}
